name: Build and Push Docker Image
description: "Build and push a Docker image"
inputs:
  environment:
    description: Environment (network) for workflow execution
    required: false
  imageName:
    description: Name for the image
    required: true
  context:
    description: Context for docker build execution
    required: true
  push:
    description: True if the image should be published
    required: true
    default: "false"
  gcrJsonKey:
    description: JSON key for Google Container Registry service account (required if push is true)
    required: false

runs:
  using: "composite"
  steps:
    - uses: actions/checkout@v3

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Cache Docker layers
      uses: actions/cache@v3
      with:
        path: /tmp/.buildx-cache
        key: ${{ runner.os }}-buildx-${{ github.sha }}
        restore-keys: |
          ${{ runner.os }}-buildx-

    - name: Load environment variables
      if: env.PUSH == 'true'
      uses: keep-network/ci/actions/load-env-variables@v2
      with:
        environment: ${{ env.ENVIRONMENT }}

    - name: Login to Google Container Registry
      if: env.PUSH == 'true'
      uses: docker/login-action@v2
      with:
        registry: ${{ env.GCR_REGISTRY_URL }}
        username: _json_key
        password: ${{ env.GCR_JSON_KEY }}

    - name: Set Docker image name
      shell: bash
      if: env.PUSH != 'true'
      run: |
        echo "IMAGE_NAME=${{ env.IMAGE_NAME }}" >> $GITHUB_ENV

    - name: Set Docker image name for GCR
      shell: bash
      if: env.PUSH == 'true'
      run: |
        echo "IMAGE_NAME=${{ env.GCR_REGISTRY_URL }}/${{ env.GOOGLE_PROJECT_ID }}/${{ env.IMAGE_NAME }}" >> $GITHUB_ENV

    - name: Build and push image
      uses: docker/build-push-action@v2
      with:
        context: ${{ env.CONTEXT }}
        # GCR image should be named according to following convention:
        # HOSTNAME/PROJECT-ID/IMAGE:TAG
        # We don't use TAG yet, will be added at later stages of work on RFC-18.
        tags: ${{ env.IMAGE_NAME }}
        labels: |
          revision=${{ github.sha }}
        push: ${{ env.PUSH == 'true' }}
        cache-from: type=local,src=/tmp/.buildx-cache
        cache-to: type=local,dest=/tmp/.buildx-cache-new
